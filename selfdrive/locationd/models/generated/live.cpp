#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2001638209905338966) {
   out_2001638209905338966[0] = 0;
   out_2001638209905338966[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2001638209905338966[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2001638209905338966[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2001638209905338966[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2001638209905338966[5] = -sin(in_vec[1]);
   out_2001638209905338966[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2001638209905338966[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2001638209905338966[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2001638209905338966[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2001638209905338966[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2001638209905338966[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2001638209905338966[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2001638209905338966[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2001638209905338966[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2001638209905338966[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2001638209905338966[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2001638209905338966[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4090277704939598758) {
   out_4090277704939598758[0] = delta_x[0] + nom_x[0];
   out_4090277704939598758[1] = delta_x[1] + nom_x[1];
   out_4090277704939598758[2] = delta_x[2] + nom_x[2];
   out_4090277704939598758[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4090277704939598758[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4090277704939598758[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4090277704939598758[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4090277704939598758[7] = delta_x[6] + nom_x[7];
   out_4090277704939598758[8] = delta_x[7] + nom_x[8];
   out_4090277704939598758[9] = delta_x[8] + nom_x[9];
   out_4090277704939598758[10] = delta_x[9] + nom_x[10];
   out_4090277704939598758[11] = delta_x[10] + nom_x[11];
   out_4090277704939598758[12] = delta_x[11] + nom_x[12];
   out_4090277704939598758[13] = delta_x[12] + nom_x[13];
   out_4090277704939598758[14] = delta_x[13] + nom_x[14];
   out_4090277704939598758[15] = delta_x[14] + nom_x[15];
   out_4090277704939598758[16] = delta_x[15] + nom_x[16];
   out_4090277704939598758[17] = delta_x[16] + nom_x[17];
   out_4090277704939598758[18] = delta_x[17] + nom_x[18];
   out_4090277704939598758[19] = delta_x[18] + nom_x[19];
   out_4090277704939598758[20] = delta_x[19] + nom_x[20];
   out_4090277704939598758[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5202557587600642285) {
   out_5202557587600642285[0] = -nom_x[0] + true_x[0];
   out_5202557587600642285[1] = -nom_x[1] + true_x[1];
   out_5202557587600642285[2] = -nom_x[2] + true_x[2];
   out_5202557587600642285[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5202557587600642285[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5202557587600642285[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5202557587600642285[6] = -nom_x[7] + true_x[7];
   out_5202557587600642285[7] = -nom_x[8] + true_x[8];
   out_5202557587600642285[8] = -nom_x[9] + true_x[9];
   out_5202557587600642285[9] = -nom_x[10] + true_x[10];
   out_5202557587600642285[10] = -nom_x[11] + true_x[11];
   out_5202557587600642285[11] = -nom_x[12] + true_x[12];
   out_5202557587600642285[12] = -nom_x[13] + true_x[13];
   out_5202557587600642285[13] = -nom_x[14] + true_x[14];
   out_5202557587600642285[14] = -nom_x[15] + true_x[15];
   out_5202557587600642285[15] = -nom_x[16] + true_x[16];
   out_5202557587600642285[16] = -nom_x[17] + true_x[17];
   out_5202557587600642285[17] = -nom_x[18] + true_x[18];
   out_5202557587600642285[18] = -nom_x[19] + true_x[19];
   out_5202557587600642285[19] = -nom_x[20] + true_x[20];
   out_5202557587600642285[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7949871151437297473) {
   out_7949871151437297473[0] = 1.0;
   out_7949871151437297473[1] = 0;
   out_7949871151437297473[2] = 0;
   out_7949871151437297473[3] = 0;
   out_7949871151437297473[4] = 0;
   out_7949871151437297473[5] = 0;
   out_7949871151437297473[6] = 0;
   out_7949871151437297473[7] = 0;
   out_7949871151437297473[8] = 0;
   out_7949871151437297473[9] = 0;
   out_7949871151437297473[10] = 0;
   out_7949871151437297473[11] = 0;
   out_7949871151437297473[12] = 0;
   out_7949871151437297473[13] = 0;
   out_7949871151437297473[14] = 0;
   out_7949871151437297473[15] = 0;
   out_7949871151437297473[16] = 0;
   out_7949871151437297473[17] = 0;
   out_7949871151437297473[18] = 0;
   out_7949871151437297473[19] = 0;
   out_7949871151437297473[20] = 0;
   out_7949871151437297473[21] = 0;
   out_7949871151437297473[22] = 1.0;
   out_7949871151437297473[23] = 0;
   out_7949871151437297473[24] = 0;
   out_7949871151437297473[25] = 0;
   out_7949871151437297473[26] = 0;
   out_7949871151437297473[27] = 0;
   out_7949871151437297473[28] = 0;
   out_7949871151437297473[29] = 0;
   out_7949871151437297473[30] = 0;
   out_7949871151437297473[31] = 0;
   out_7949871151437297473[32] = 0;
   out_7949871151437297473[33] = 0;
   out_7949871151437297473[34] = 0;
   out_7949871151437297473[35] = 0;
   out_7949871151437297473[36] = 0;
   out_7949871151437297473[37] = 0;
   out_7949871151437297473[38] = 0;
   out_7949871151437297473[39] = 0;
   out_7949871151437297473[40] = 0;
   out_7949871151437297473[41] = 0;
   out_7949871151437297473[42] = 0;
   out_7949871151437297473[43] = 0;
   out_7949871151437297473[44] = 1.0;
   out_7949871151437297473[45] = 0;
   out_7949871151437297473[46] = 0;
   out_7949871151437297473[47] = 0;
   out_7949871151437297473[48] = 0;
   out_7949871151437297473[49] = 0;
   out_7949871151437297473[50] = 0;
   out_7949871151437297473[51] = 0;
   out_7949871151437297473[52] = 0;
   out_7949871151437297473[53] = 0;
   out_7949871151437297473[54] = 0;
   out_7949871151437297473[55] = 0;
   out_7949871151437297473[56] = 0;
   out_7949871151437297473[57] = 0;
   out_7949871151437297473[58] = 0;
   out_7949871151437297473[59] = 0;
   out_7949871151437297473[60] = 0;
   out_7949871151437297473[61] = 0;
   out_7949871151437297473[62] = 0;
   out_7949871151437297473[63] = 0;
   out_7949871151437297473[64] = 0;
   out_7949871151437297473[65] = 0;
   out_7949871151437297473[66] = -0.5*state[4];
   out_7949871151437297473[67] = -0.5*state[5];
   out_7949871151437297473[68] = -0.5*state[6];
   out_7949871151437297473[69] = 0;
   out_7949871151437297473[70] = 0;
   out_7949871151437297473[71] = 0;
   out_7949871151437297473[72] = 0;
   out_7949871151437297473[73] = 0;
   out_7949871151437297473[74] = 0;
   out_7949871151437297473[75] = 0;
   out_7949871151437297473[76] = 0;
   out_7949871151437297473[77] = 0;
   out_7949871151437297473[78] = 0;
   out_7949871151437297473[79] = 0;
   out_7949871151437297473[80] = 0;
   out_7949871151437297473[81] = 0;
   out_7949871151437297473[82] = 0;
   out_7949871151437297473[83] = 0;
   out_7949871151437297473[84] = 0;
   out_7949871151437297473[85] = 0;
   out_7949871151437297473[86] = 0;
   out_7949871151437297473[87] = 0.5*state[3];
   out_7949871151437297473[88] = 0.5*state[6];
   out_7949871151437297473[89] = -0.5*state[5];
   out_7949871151437297473[90] = 0;
   out_7949871151437297473[91] = 0;
   out_7949871151437297473[92] = 0;
   out_7949871151437297473[93] = 0;
   out_7949871151437297473[94] = 0;
   out_7949871151437297473[95] = 0;
   out_7949871151437297473[96] = 0;
   out_7949871151437297473[97] = 0;
   out_7949871151437297473[98] = 0;
   out_7949871151437297473[99] = 0;
   out_7949871151437297473[100] = 0;
   out_7949871151437297473[101] = 0;
   out_7949871151437297473[102] = 0;
   out_7949871151437297473[103] = 0;
   out_7949871151437297473[104] = 0;
   out_7949871151437297473[105] = 0;
   out_7949871151437297473[106] = 0;
   out_7949871151437297473[107] = 0;
   out_7949871151437297473[108] = -0.5*state[6];
   out_7949871151437297473[109] = 0.5*state[3];
   out_7949871151437297473[110] = 0.5*state[4];
   out_7949871151437297473[111] = 0;
   out_7949871151437297473[112] = 0;
   out_7949871151437297473[113] = 0;
   out_7949871151437297473[114] = 0;
   out_7949871151437297473[115] = 0;
   out_7949871151437297473[116] = 0;
   out_7949871151437297473[117] = 0;
   out_7949871151437297473[118] = 0;
   out_7949871151437297473[119] = 0;
   out_7949871151437297473[120] = 0;
   out_7949871151437297473[121] = 0;
   out_7949871151437297473[122] = 0;
   out_7949871151437297473[123] = 0;
   out_7949871151437297473[124] = 0;
   out_7949871151437297473[125] = 0;
   out_7949871151437297473[126] = 0;
   out_7949871151437297473[127] = 0;
   out_7949871151437297473[128] = 0;
   out_7949871151437297473[129] = 0.5*state[5];
   out_7949871151437297473[130] = -0.5*state[4];
   out_7949871151437297473[131] = 0.5*state[3];
   out_7949871151437297473[132] = 0;
   out_7949871151437297473[133] = 0;
   out_7949871151437297473[134] = 0;
   out_7949871151437297473[135] = 0;
   out_7949871151437297473[136] = 0;
   out_7949871151437297473[137] = 0;
   out_7949871151437297473[138] = 0;
   out_7949871151437297473[139] = 0;
   out_7949871151437297473[140] = 0;
   out_7949871151437297473[141] = 0;
   out_7949871151437297473[142] = 0;
   out_7949871151437297473[143] = 0;
   out_7949871151437297473[144] = 0;
   out_7949871151437297473[145] = 0;
   out_7949871151437297473[146] = 0;
   out_7949871151437297473[147] = 0;
   out_7949871151437297473[148] = 0;
   out_7949871151437297473[149] = 0;
   out_7949871151437297473[150] = 0;
   out_7949871151437297473[151] = 0;
   out_7949871151437297473[152] = 0;
   out_7949871151437297473[153] = 1.0;
   out_7949871151437297473[154] = 0;
   out_7949871151437297473[155] = 0;
   out_7949871151437297473[156] = 0;
   out_7949871151437297473[157] = 0;
   out_7949871151437297473[158] = 0;
   out_7949871151437297473[159] = 0;
   out_7949871151437297473[160] = 0;
   out_7949871151437297473[161] = 0;
   out_7949871151437297473[162] = 0;
   out_7949871151437297473[163] = 0;
   out_7949871151437297473[164] = 0;
   out_7949871151437297473[165] = 0;
   out_7949871151437297473[166] = 0;
   out_7949871151437297473[167] = 0;
   out_7949871151437297473[168] = 0;
   out_7949871151437297473[169] = 0;
   out_7949871151437297473[170] = 0;
   out_7949871151437297473[171] = 0;
   out_7949871151437297473[172] = 0;
   out_7949871151437297473[173] = 0;
   out_7949871151437297473[174] = 0;
   out_7949871151437297473[175] = 1.0;
   out_7949871151437297473[176] = 0;
   out_7949871151437297473[177] = 0;
   out_7949871151437297473[178] = 0;
   out_7949871151437297473[179] = 0;
   out_7949871151437297473[180] = 0;
   out_7949871151437297473[181] = 0;
   out_7949871151437297473[182] = 0;
   out_7949871151437297473[183] = 0;
   out_7949871151437297473[184] = 0;
   out_7949871151437297473[185] = 0;
   out_7949871151437297473[186] = 0;
   out_7949871151437297473[187] = 0;
   out_7949871151437297473[188] = 0;
   out_7949871151437297473[189] = 0;
   out_7949871151437297473[190] = 0;
   out_7949871151437297473[191] = 0;
   out_7949871151437297473[192] = 0;
   out_7949871151437297473[193] = 0;
   out_7949871151437297473[194] = 0;
   out_7949871151437297473[195] = 0;
   out_7949871151437297473[196] = 0;
   out_7949871151437297473[197] = 1.0;
   out_7949871151437297473[198] = 0;
   out_7949871151437297473[199] = 0;
   out_7949871151437297473[200] = 0;
   out_7949871151437297473[201] = 0;
   out_7949871151437297473[202] = 0;
   out_7949871151437297473[203] = 0;
   out_7949871151437297473[204] = 0;
   out_7949871151437297473[205] = 0;
   out_7949871151437297473[206] = 0;
   out_7949871151437297473[207] = 0;
   out_7949871151437297473[208] = 0;
   out_7949871151437297473[209] = 0;
   out_7949871151437297473[210] = 0;
   out_7949871151437297473[211] = 0;
   out_7949871151437297473[212] = 0;
   out_7949871151437297473[213] = 0;
   out_7949871151437297473[214] = 0;
   out_7949871151437297473[215] = 0;
   out_7949871151437297473[216] = 0;
   out_7949871151437297473[217] = 0;
   out_7949871151437297473[218] = 0;
   out_7949871151437297473[219] = 1.0;
   out_7949871151437297473[220] = 0;
   out_7949871151437297473[221] = 0;
   out_7949871151437297473[222] = 0;
   out_7949871151437297473[223] = 0;
   out_7949871151437297473[224] = 0;
   out_7949871151437297473[225] = 0;
   out_7949871151437297473[226] = 0;
   out_7949871151437297473[227] = 0;
   out_7949871151437297473[228] = 0;
   out_7949871151437297473[229] = 0;
   out_7949871151437297473[230] = 0;
   out_7949871151437297473[231] = 0;
   out_7949871151437297473[232] = 0;
   out_7949871151437297473[233] = 0;
   out_7949871151437297473[234] = 0;
   out_7949871151437297473[235] = 0;
   out_7949871151437297473[236] = 0;
   out_7949871151437297473[237] = 0;
   out_7949871151437297473[238] = 0;
   out_7949871151437297473[239] = 0;
   out_7949871151437297473[240] = 0;
   out_7949871151437297473[241] = 1.0;
   out_7949871151437297473[242] = 0;
   out_7949871151437297473[243] = 0;
   out_7949871151437297473[244] = 0;
   out_7949871151437297473[245] = 0;
   out_7949871151437297473[246] = 0;
   out_7949871151437297473[247] = 0;
   out_7949871151437297473[248] = 0;
   out_7949871151437297473[249] = 0;
   out_7949871151437297473[250] = 0;
   out_7949871151437297473[251] = 0;
   out_7949871151437297473[252] = 0;
   out_7949871151437297473[253] = 0;
   out_7949871151437297473[254] = 0;
   out_7949871151437297473[255] = 0;
   out_7949871151437297473[256] = 0;
   out_7949871151437297473[257] = 0;
   out_7949871151437297473[258] = 0;
   out_7949871151437297473[259] = 0;
   out_7949871151437297473[260] = 0;
   out_7949871151437297473[261] = 0;
   out_7949871151437297473[262] = 0;
   out_7949871151437297473[263] = 1.0;
   out_7949871151437297473[264] = 0;
   out_7949871151437297473[265] = 0;
   out_7949871151437297473[266] = 0;
   out_7949871151437297473[267] = 0;
   out_7949871151437297473[268] = 0;
   out_7949871151437297473[269] = 0;
   out_7949871151437297473[270] = 0;
   out_7949871151437297473[271] = 0;
   out_7949871151437297473[272] = 0;
   out_7949871151437297473[273] = 0;
   out_7949871151437297473[274] = 0;
   out_7949871151437297473[275] = 0;
   out_7949871151437297473[276] = 0;
   out_7949871151437297473[277] = 0;
   out_7949871151437297473[278] = 0;
   out_7949871151437297473[279] = 0;
   out_7949871151437297473[280] = 0;
   out_7949871151437297473[281] = 0;
   out_7949871151437297473[282] = 0;
   out_7949871151437297473[283] = 0;
   out_7949871151437297473[284] = 0;
   out_7949871151437297473[285] = 1.0;
   out_7949871151437297473[286] = 0;
   out_7949871151437297473[287] = 0;
   out_7949871151437297473[288] = 0;
   out_7949871151437297473[289] = 0;
   out_7949871151437297473[290] = 0;
   out_7949871151437297473[291] = 0;
   out_7949871151437297473[292] = 0;
   out_7949871151437297473[293] = 0;
   out_7949871151437297473[294] = 0;
   out_7949871151437297473[295] = 0;
   out_7949871151437297473[296] = 0;
   out_7949871151437297473[297] = 0;
   out_7949871151437297473[298] = 0;
   out_7949871151437297473[299] = 0;
   out_7949871151437297473[300] = 0;
   out_7949871151437297473[301] = 0;
   out_7949871151437297473[302] = 0;
   out_7949871151437297473[303] = 0;
   out_7949871151437297473[304] = 0;
   out_7949871151437297473[305] = 0;
   out_7949871151437297473[306] = 0;
   out_7949871151437297473[307] = 1.0;
   out_7949871151437297473[308] = 0;
   out_7949871151437297473[309] = 0;
   out_7949871151437297473[310] = 0;
   out_7949871151437297473[311] = 0;
   out_7949871151437297473[312] = 0;
   out_7949871151437297473[313] = 0;
   out_7949871151437297473[314] = 0;
   out_7949871151437297473[315] = 0;
   out_7949871151437297473[316] = 0;
   out_7949871151437297473[317] = 0;
   out_7949871151437297473[318] = 0;
   out_7949871151437297473[319] = 0;
   out_7949871151437297473[320] = 0;
   out_7949871151437297473[321] = 0;
   out_7949871151437297473[322] = 0;
   out_7949871151437297473[323] = 0;
   out_7949871151437297473[324] = 0;
   out_7949871151437297473[325] = 0;
   out_7949871151437297473[326] = 0;
   out_7949871151437297473[327] = 0;
   out_7949871151437297473[328] = 0;
   out_7949871151437297473[329] = 1.0;
   out_7949871151437297473[330] = 0;
   out_7949871151437297473[331] = 0;
   out_7949871151437297473[332] = 0;
   out_7949871151437297473[333] = 0;
   out_7949871151437297473[334] = 0;
   out_7949871151437297473[335] = 0;
   out_7949871151437297473[336] = 0;
   out_7949871151437297473[337] = 0;
   out_7949871151437297473[338] = 0;
   out_7949871151437297473[339] = 0;
   out_7949871151437297473[340] = 0;
   out_7949871151437297473[341] = 0;
   out_7949871151437297473[342] = 0;
   out_7949871151437297473[343] = 0;
   out_7949871151437297473[344] = 0;
   out_7949871151437297473[345] = 0;
   out_7949871151437297473[346] = 0;
   out_7949871151437297473[347] = 0;
   out_7949871151437297473[348] = 0;
   out_7949871151437297473[349] = 0;
   out_7949871151437297473[350] = 0;
   out_7949871151437297473[351] = 1.0;
   out_7949871151437297473[352] = 0;
   out_7949871151437297473[353] = 0;
   out_7949871151437297473[354] = 0;
   out_7949871151437297473[355] = 0;
   out_7949871151437297473[356] = 0;
   out_7949871151437297473[357] = 0;
   out_7949871151437297473[358] = 0;
   out_7949871151437297473[359] = 0;
   out_7949871151437297473[360] = 0;
   out_7949871151437297473[361] = 0;
   out_7949871151437297473[362] = 0;
   out_7949871151437297473[363] = 0;
   out_7949871151437297473[364] = 0;
   out_7949871151437297473[365] = 0;
   out_7949871151437297473[366] = 0;
   out_7949871151437297473[367] = 0;
   out_7949871151437297473[368] = 0;
   out_7949871151437297473[369] = 0;
   out_7949871151437297473[370] = 0;
   out_7949871151437297473[371] = 0;
   out_7949871151437297473[372] = 0;
   out_7949871151437297473[373] = 1.0;
   out_7949871151437297473[374] = 0;
   out_7949871151437297473[375] = 0;
   out_7949871151437297473[376] = 0;
   out_7949871151437297473[377] = 0;
   out_7949871151437297473[378] = 0;
   out_7949871151437297473[379] = 0;
   out_7949871151437297473[380] = 0;
   out_7949871151437297473[381] = 0;
   out_7949871151437297473[382] = 0;
   out_7949871151437297473[383] = 0;
   out_7949871151437297473[384] = 0;
   out_7949871151437297473[385] = 0;
   out_7949871151437297473[386] = 0;
   out_7949871151437297473[387] = 0;
   out_7949871151437297473[388] = 0;
   out_7949871151437297473[389] = 0;
   out_7949871151437297473[390] = 0;
   out_7949871151437297473[391] = 0;
   out_7949871151437297473[392] = 0;
   out_7949871151437297473[393] = 0;
   out_7949871151437297473[394] = 0;
   out_7949871151437297473[395] = 1.0;
   out_7949871151437297473[396] = 0;
   out_7949871151437297473[397] = 0;
   out_7949871151437297473[398] = 0;
   out_7949871151437297473[399] = 0;
   out_7949871151437297473[400] = 0;
   out_7949871151437297473[401] = 0;
   out_7949871151437297473[402] = 0;
   out_7949871151437297473[403] = 0;
   out_7949871151437297473[404] = 0;
   out_7949871151437297473[405] = 0;
   out_7949871151437297473[406] = 0;
   out_7949871151437297473[407] = 0;
   out_7949871151437297473[408] = 0;
   out_7949871151437297473[409] = 0;
   out_7949871151437297473[410] = 0;
   out_7949871151437297473[411] = 0;
   out_7949871151437297473[412] = 0;
   out_7949871151437297473[413] = 0;
   out_7949871151437297473[414] = 0;
   out_7949871151437297473[415] = 0;
   out_7949871151437297473[416] = 0;
   out_7949871151437297473[417] = 1.0;
   out_7949871151437297473[418] = 0;
   out_7949871151437297473[419] = 0;
   out_7949871151437297473[420] = 0;
   out_7949871151437297473[421] = 0;
   out_7949871151437297473[422] = 0;
   out_7949871151437297473[423] = 0;
   out_7949871151437297473[424] = 0;
   out_7949871151437297473[425] = 0;
   out_7949871151437297473[426] = 0;
   out_7949871151437297473[427] = 0;
   out_7949871151437297473[428] = 0;
   out_7949871151437297473[429] = 0;
   out_7949871151437297473[430] = 0;
   out_7949871151437297473[431] = 0;
   out_7949871151437297473[432] = 0;
   out_7949871151437297473[433] = 0;
   out_7949871151437297473[434] = 0;
   out_7949871151437297473[435] = 0;
   out_7949871151437297473[436] = 0;
   out_7949871151437297473[437] = 0;
   out_7949871151437297473[438] = 0;
   out_7949871151437297473[439] = 1.0;
   out_7949871151437297473[440] = 0;
   out_7949871151437297473[441] = 0;
   out_7949871151437297473[442] = 0;
   out_7949871151437297473[443] = 0;
   out_7949871151437297473[444] = 0;
   out_7949871151437297473[445] = 0;
   out_7949871151437297473[446] = 0;
   out_7949871151437297473[447] = 0;
   out_7949871151437297473[448] = 0;
   out_7949871151437297473[449] = 0;
   out_7949871151437297473[450] = 0;
   out_7949871151437297473[451] = 0;
   out_7949871151437297473[452] = 0;
   out_7949871151437297473[453] = 0;
   out_7949871151437297473[454] = 0;
   out_7949871151437297473[455] = 0;
   out_7949871151437297473[456] = 0;
   out_7949871151437297473[457] = 0;
   out_7949871151437297473[458] = 0;
   out_7949871151437297473[459] = 0;
   out_7949871151437297473[460] = 0;
   out_7949871151437297473[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3703409087435433243) {
   out_3703409087435433243[0] = dt*state[7] + state[0];
   out_3703409087435433243[1] = dt*state[8] + state[1];
   out_3703409087435433243[2] = dt*state[9] + state[2];
   out_3703409087435433243[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3703409087435433243[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3703409087435433243[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3703409087435433243[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3703409087435433243[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3703409087435433243[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3703409087435433243[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3703409087435433243[10] = state[10];
   out_3703409087435433243[11] = state[11];
   out_3703409087435433243[12] = state[12];
   out_3703409087435433243[13] = state[13];
   out_3703409087435433243[14] = state[14];
   out_3703409087435433243[15] = state[15];
   out_3703409087435433243[16] = state[16];
   out_3703409087435433243[17] = state[17];
   out_3703409087435433243[18] = state[18];
   out_3703409087435433243[19] = state[19];
   out_3703409087435433243[20] = state[20];
   out_3703409087435433243[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4085847992067201093) {
   out_4085847992067201093[0] = 1;
   out_4085847992067201093[1] = 0;
   out_4085847992067201093[2] = 0;
   out_4085847992067201093[3] = 0;
   out_4085847992067201093[4] = 0;
   out_4085847992067201093[5] = 0;
   out_4085847992067201093[6] = dt;
   out_4085847992067201093[7] = 0;
   out_4085847992067201093[8] = 0;
   out_4085847992067201093[9] = 0;
   out_4085847992067201093[10] = 0;
   out_4085847992067201093[11] = 0;
   out_4085847992067201093[12] = 0;
   out_4085847992067201093[13] = 0;
   out_4085847992067201093[14] = 0;
   out_4085847992067201093[15] = 0;
   out_4085847992067201093[16] = 0;
   out_4085847992067201093[17] = 0;
   out_4085847992067201093[18] = 0;
   out_4085847992067201093[19] = 0;
   out_4085847992067201093[20] = 0;
   out_4085847992067201093[21] = 0;
   out_4085847992067201093[22] = 1;
   out_4085847992067201093[23] = 0;
   out_4085847992067201093[24] = 0;
   out_4085847992067201093[25] = 0;
   out_4085847992067201093[26] = 0;
   out_4085847992067201093[27] = 0;
   out_4085847992067201093[28] = dt;
   out_4085847992067201093[29] = 0;
   out_4085847992067201093[30] = 0;
   out_4085847992067201093[31] = 0;
   out_4085847992067201093[32] = 0;
   out_4085847992067201093[33] = 0;
   out_4085847992067201093[34] = 0;
   out_4085847992067201093[35] = 0;
   out_4085847992067201093[36] = 0;
   out_4085847992067201093[37] = 0;
   out_4085847992067201093[38] = 0;
   out_4085847992067201093[39] = 0;
   out_4085847992067201093[40] = 0;
   out_4085847992067201093[41] = 0;
   out_4085847992067201093[42] = 0;
   out_4085847992067201093[43] = 0;
   out_4085847992067201093[44] = 1;
   out_4085847992067201093[45] = 0;
   out_4085847992067201093[46] = 0;
   out_4085847992067201093[47] = 0;
   out_4085847992067201093[48] = 0;
   out_4085847992067201093[49] = 0;
   out_4085847992067201093[50] = dt;
   out_4085847992067201093[51] = 0;
   out_4085847992067201093[52] = 0;
   out_4085847992067201093[53] = 0;
   out_4085847992067201093[54] = 0;
   out_4085847992067201093[55] = 0;
   out_4085847992067201093[56] = 0;
   out_4085847992067201093[57] = 0;
   out_4085847992067201093[58] = 0;
   out_4085847992067201093[59] = 0;
   out_4085847992067201093[60] = 0;
   out_4085847992067201093[61] = 0;
   out_4085847992067201093[62] = 0;
   out_4085847992067201093[63] = 0;
   out_4085847992067201093[64] = 0;
   out_4085847992067201093[65] = 0;
   out_4085847992067201093[66] = 1;
   out_4085847992067201093[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4085847992067201093[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4085847992067201093[69] = 0;
   out_4085847992067201093[70] = 0;
   out_4085847992067201093[71] = 0;
   out_4085847992067201093[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4085847992067201093[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4085847992067201093[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4085847992067201093[75] = 0;
   out_4085847992067201093[76] = 0;
   out_4085847992067201093[77] = 0;
   out_4085847992067201093[78] = 0;
   out_4085847992067201093[79] = 0;
   out_4085847992067201093[80] = 0;
   out_4085847992067201093[81] = 0;
   out_4085847992067201093[82] = 0;
   out_4085847992067201093[83] = 0;
   out_4085847992067201093[84] = 0;
   out_4085847992067201093[85] = 0;
   out_4085847992067201093[86] = 0;
   out_4085847992067201093[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4085847992067201093[88] = 1;
   out_4085847992067201093[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4085847992067201093[90] = 0;
   out_4085847992067201093[91] = 0;
   out_4085847992067201093[92] = 0;
   out_4085847992067201093[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4085847992067201093[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4085847992067201093[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4085847992067201093[96] = 0;
   out_4085847992067201093[97] = 0;
   out_4085847992067201093[98] = 0;
   out_4085847992067201093[99] = 0;
   out_4085847992067201093[100] = 0;
   out_4085847992067201093[101] = 0;
   out_4085847992067201093[102] = 0;
   out_4085847992067201093[103] = 0;
   out_4085847992067201093[104] = 0;
   out_4085847992067201093[105] = 0;
   out_4085847992067201093[106] = 0;
   out_4085847992067201093[107] = 0;
   out_4085847992067201093[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4085847992067201093[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4085847992067201093[110] = 1;
   out_4085847992067201093[111] = 0;
   out_4085847992067201093[112] = 0;
   out_4085847992067201093[113] = 0;
   out_4085847992067201093[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4085847992067201093[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4085847992067201093[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4085847992067201093[117] = 0;
   out_4085847992067201093[118] = 0;
   out_4085847992067201093[119] = 0;
   out_4085847992067201093[120] = 0;
   out_4085847992067201093[121] = 0;
   out_4085847992067201093[122] = 0;
   out_4085847992067201093[123] = 0;
   out_4085847992067201093[124] = 0;
   out_4085847992067201093[125] = 0;
   out_4085847992067201093[126] = 0;
   out_4085847992067201093[127] = 0;
   out_4085847992067201093[128] = 0;
   out_4085847992067201093[129] = 0;
   out_4085847992067201093[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4085847992067201093[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4085847992067201093[132] = 1;
   out_4085847992067201093[133] = 0;
   out_4085847992067201093[134] = 0;
   out_4085847992067201093[135] = 0;
   out_4085847992067201093[136] = 0;
   out_4085847992067201093[137] = 0;
   out_4085847992067201093[138] = 0;
   out_4085847992067201093[139] = 0;
   out_4085847992067201093[140] = 0;
   out_4085847992067201093[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4085847992067201093[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4085847992067201093[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4085847992067201093[144] = 0;
   out_4085847992067201093[145] = 0;
   out_4085847992067201093[146] = 0;
   out_4085847992067201093[147] = 0;
   out_4085847992067201093[148] = 0;
   out_4085847992067201093[149] = 0;
   out_4085847992067201093[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4085847992067201093[151] = 0;
   out_4085847992067201093[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4085847992067201093[153] = 0;
   out_4085847992067201093[154] = 1;
   out_4085847992067201093[155] = 0;
   out_4085847992067201093[156] = 0;
   out_4085847992067201093[157] = 0;
   out_4085847992067201093[158] = 0;
   out_4085847992067201093[159] = 0;
   out_4085847992067201093[160] = 0;
   out_4085847992067201093[161] = 0;
   out_4085847992067201093[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4085847992067201093[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4085847992067201093[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4085847992067201093[165] = 0;
   out_4085847992067201093[166] = 0;
   out_4085847992067201093[167] = 0;
   out_4085847992067201093[168] = 0;
   out_4085847992067201093[169] = 0;
   out_4085847992067201093[170] = 0;
   out_4085847992067201093[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4085847992067201093[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4085847992067201093[173] = 0;
   out_4085847992067201093[174] = 0;
   out_4085847992067201093[175] = 0;
   out_4085847992067201093[176] = 1;
   out_4085847992067201093[177] = 0;
   out_4085847992067201093[178] = 0;
   out_4085847992067201093[179] = 0;
   out_4085847992067201093[180] = 0;
   out_4085847992067201093[181] = 0;
   out_4085847992067201093[182] = 0;
   out_4085847992067201093[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4085847992067201093[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4085847992067201093[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4085847992067201093[186] = 0;
   out_4085847992067201093[187] = 0;
   out_4085847992067201093[188] = 0;
   out_4085847992067201093[189] = 0;
   out_4085847992067201093[190] = 0;
   out_4085847992067201093[191] = 0;
   out_4085847992067201093[192] = 0;
   out_4085847992067201093[193] = 0;
   out_4085847992067201093[194] = 0;
   out_4085847992067201093[195] = 0;
   out_4085847992067201093[196] = 0;
   out_4085847992067201093[197] = 0;
   out_4085847992067201093[198] = 1;
   out_4085847992067201093[199] = 0;
   out_4085847992067201093[200] = 0;
   out_4085847992067201093[201] = 0;
   out_4085847992067201093[202] = 0;
   out_4085847992067201093[203] = 0;
   out_4085847992067201093[204] = 0;
   out_4085847992067201093[205] = 0;
   out_4085847992067201093[206] = 0;
   out_4085847992067201093[207] = 0;
   out_4085847992067201093[208] = 0;
   out_4085847992067201093[209] = 0;
   out_4085847992067201093[210] = 0;
   out_4085847992067201093[211] = 0;
   out_4085847992067201093[212] = 0;
   out_4085847992067201093[213] = 0;
   out_4085847992067201093[214] = 0;
   out_4085847992067201093[215] = 0;
   out_4085847992067201093[216] = 0;
   out_4085847992067201093[217] = 0;
   out_4085847992067201093[218] = 0;
   out_4085847992067201093[219] = 0;
   out_4085847992067201093[220] = 1;
   out_4085847992067201093[221] = 0;
   out_4085847992067201093[222] = 0;
   out_4085847992067201093[223] = 0;
   out_4085847992067201093[224] = 0;
   out_4085847992067201093[225] = 0;
   out_4085847992067201093[226] = 0;
   out_4085847992067201093[227] = 0;
   out_4085847992067201093[228] = 0;
   out_4085847992067201093[229] = 0;
   out_4085847992067201093[230] = 0;
   out_4085847992067201093[231] = 0;
   out_4085847992067201093[232] = 0;
   out_4085847992067201093[233] = 0;
   out_4085847992067201093[234] = 0;
   out_4085847992067201093[235] = 0;
   out_4085847992067201093[236] = 0;
   out_4085847992067201093[237] = 0;
   out_4085847992067201093[238] = 0;
   out_4085847992067201093[239] = 0;
   out_4085847992067201093[240] = 0;
   out_4085847992067201093[241] = 0;
   out_4085847992067201093[242] = 1;
   out_4085847992067201093[243] = 0;
   out_4085847992067201093[244] = 0;
   out_4085847992067201093[245] = 0;
   out_4085847992067201093[246] = 0;
   out_4085847992067201093[247] = 0;
   out_4085847992067201093[248] = 0;
   out_4085847992067201093[249] = 0;
   out_4085847992067201093[250] = 0;
   out_4085847992067201093[251] = 0;
   out_4085847992067201093[252] = 0;
   out_4085847992067201093[253] = 0;
   out_4085847992067201093[254] = 0;
   out_4085847992067201093[255] = 0;
   out_4085847992067201093[256] = 0;
   out_4085847992067201093[257] = 0;
   out_4085847992067201093[258] = 0;
   out_4085847992067201093[259] = 0;
   out_4085847992067201093[260] = 0;
   out_4085847992067201093[261] = 0;
   out_4085847992067201093[262] = 0;
   out_4085847992067201093[263] = 0;
   out_4085847992067201093[264] = 1;
   out_4085847992067201093[265] = 0;
   out_4085847992067201093[266] = 0;
   out_4085847992067201093[267] = 0;
   out_4085847992067201093[268] = 0;
   out_4085847992067201093[269] = 0;
   out_4085847992067201093[270] = 0;
   out_4085847992067201093[271] = 0;
   out_4085847992067201093[272] = 0;
   out_4085847992067201093[273] = 0;
   out_4085847992067201093[274] = 0;
   out_4085847992067201093[275] = 0;
   out_4085847992067201093[276] = 0;
   out_4085847992067201093[277] = 0;
   out_4085847992067201093[278] = 0;
   out_4085847992067201093[279] = 0;
   out_4085847992067201093[280] = 0;
   out_4085847992067201093[281] = 0;
   out_4085847992067201093[282] = 0;
   out_4085847992067201093[283] = 0;
   out_4085847992067201093[284] = 0;
   out_4085847992067201093[285] = 0;
   out_4085847992067201093[286] = 1;
   out_4085847992067201093[287] = 0;
   out_4085847992067201093[288] = 0;
   out_4085847992067201093[289] = 0;
   out_4085847992067201093[290] = 0;
   out_4085847992067201093[291] = 0;
   out_4085847992067201093[292] = 0;
   out_4085847992067201093[293] = 0;
   out_4085847992067201093[294] = 0;
   out_4085847992067201093[295] = 0;
   out_4085847992067201093[296] = 0;
   out_4085847992067201093[297] = 0;
   out_4085847992067201093[298] = 0;
   out_4085847992067201093[299] = 0;
   out_4085847992067201093[300] = 0;
   out_4085847992067201093[301] = 0;
   out_4085847992067201093[302] = 0;
   out_4085847992067201093[303] = 0;
   out_4085847992067201093[304] = 0;
   out_4085847992067201093[305] = 0;
   out_4085847992067201093[306] = 0;
   out_4085847992067201093[307] = 0;
   out_4085847992067201093[308] = 1;
   out_4085847992067201093[309] = 0;
   out_4085847992067201093[310] = 0;
   out_4085847992067201093[311] = 0;
   out_4085847992067201093[312] = 0;
   out_4085847992067201093[313] = 0;
   out_4085847992067201093[314] = 0;
   out_4085847992067201093[315] = 0;
   out_4085847992067201093[316] = 0;
   out_4085847992067201093[317] = 0;
   out_4085847992067201093[318] = 0;
   out_4085847992067201093[319] = 0;
   out_4085847992067201093[320] = 0;
   out_4085847992067201093[321] = 0;
   out_4085847992067201093[322] = 0;
   out_4085847992067201093[323] = 0;
   out_4085847992067201093[324] = 0;
   out_4085847992067201093[325] = 0;
   out_4085847992067201093[326] = 0;
   out_4085847992067201093[327] = 0;
   out_4085847992067201093[328] = 0;
   out_4085847992067201093[329] = 0;
   out_4085847992067201093[330] = 1;
   out_4085847992067201093[331] = 0;
   out_4085847992067201093[332] = 0;
   out_4085847992067201093[333] = 0;
   out_4085847992067201093[334] = 0;
   out_4085847992067201093[335] = 0;
   out_4085847992067201093[336] = 0;
   out_4085847992067201093[337] = 0;
   out_4085847992067201093[338] = 0;
   out_4085847992067201093[339] = 0;
   out_4085847992067201093[340] = 0;
   out_4085847992067201093[341] = 0;
   out_4085847992067201093[342] = 0;
   out_4085847992067201093[343] = 0;
   out_4085847992067201093[344] = 0;
   out_4085847992067201093[345] = 0;
   out_4085847992067201093[346] = 0;
   out_4085847992067201093[347] = 0;
   out_4085847992067201093[348] = 0;
   out_4085847992067201093[349] = 0;
   out_4085847992067201093[350] = 0;
   out_4085847992067201093[351] = 0;
   out_4085847992067201093[352] = 1;
   out_4085847992067201093[353] = 0;
   out_4085847992067201093[354] = 0;
   out_4085847992067201093[355] = 0;
   out_4085847992067201093[356] = 0;
   out_4085847992067201093[357] = 0;
   out_4085847992067201093[358] = 0;
   out_4085847992067201093[359] = 0;
   out_4085847992067201093[360] = 0;
   out_4085847992067201093[361] = 0;
   out_4085847992067201093[362] = 0;
   out_4085847992067201093[363] = 0;
   out_4085847992067201093[364] = 0;
   out_4085847992067201093[365] = 0;
   out_4085847992067201093[366] = 0;
   out_4085847992067201093[367] = 0;
   out_4085847992067201093[368] = 0;
   out_4085847992067201093[369] = 0;
   out_4085847992067201093[370] = 0;
   out_4085847992067201093[371] = 0;
   out_4085847992067201093[372] = 0;
   out_4085847992067201093[373] = 0;
   out_4085847992067201093[374] = 1;
   out_4085847992067201093[375] = 0;
   out_4085847992067201093[376] = 0;
   out_4085847992067201093[377] = 0;
   out_4085847992067201093[378] = 0;
   out_4085847992067201093[379] = 0;
   out_4085847992067201093[380] = 0;
   out_4085847992067201093[381] = 0;
   out_4085847992067201093[382] = 0;
   out_4085847992067201093[383] = 0;
   out_4085847992067201093[384] = 0;
   out_4085847992067201093[385] = 0;
   out_4085847992067201093[386] = 0;
   out_4085847992067201093[387] = 0;
   out_4085847992067201093[388] = 0;
   out_4085847992067201093[389] = 0;
   out_4085847992067201093[390] = 0;
   out_4085847992067201093[391] = 0;
   out_4085847992067201093[392] = 0;
   out_4085847992067201093[393] = 0;
   out_4085847992067201093[394] = 0;
   out_4085847992067201093[395] = 0;
   out_4085847992067201093[396] = 1;
   out_4085847992067201093[397] = 0;
   out_4085847992067201093[398] = 0;
   out_4085847992067201093[399] = 0;
   out_4085847992067201093[400] = 0;
   out_4085847992067201093[401] = 0;
   out_4085847992067201093[402] = 0;
   out_4085847992067201093[403] = 0;
   out_4085847992067201093[404] = 0;
   out_4085847992067201093[405] = 0;
   out_4085847992067201093[406] = 0;
   out_4085847992067201093[407] = 0;
   out_4085847992067201093[408] = 0;
   out_4085847992067201093[409] = 0;
   out_4085847992067201093[410] = 0;
   out_4085847992067201093[411] = 0;
   out_4085847992067201093[412] = 0;
   out_4085847992067201093[413] = 0;
   out_4085847992067201093[414] = 0;
   out_4085847992067201093[415] = 0;
   out_4085847992067201093[416] = 0;
   out_4085847992067201093[417] = 0;
   out_4085847992067201093[418] = 1;
   out_4085847992067201093[419] = 0;
   out_4085847992067201093[420] = 0;
   out_4085847992067201093[421] = 0;
   out_4085847992067201093[422] = 0;
   out_4085847992067201093[423] = 0;
   out_4085847992067201093[424] = 0;
   out_4085847992067201093[425] = 0;
   out_4085847992067201093[426] = 0;
   out_4085847992067201093[427] = 0;
   out_4085847992067201093[428] = 0;
   out_4085847992067201093[429] = 0;
   out_4085847992067201093[430] = 0;
   out_4085847992067201093[431] = 0;
   out_4085847992067201093[432] = 0;
   out_4085847992067201093[433] = 0;
   out_4085847992067201093[434] = 0;
   out_4085847992067201093[435] = 0;
   out_4085847992067201093[436] = 0;
   out_4085847992067201093[437] = 0;
   out_4085847992067201093[438] = 0;
   out_4085847992067201093[439] = 0;
   out_4085847992067201093[440] = 1;
}
void h_4(double *state, double *unused, double *out_6781006617317371273) {
   out_6781006617317371273[0] = state[10] + state[13];
   out_6781006617317371273[1] = state[11] + state[14];
   out_6781006617317371273[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8242877463465214800) {
   out_8242877463465214800[0] = 0;
   out_8242877463465214800[1] = 0;
   out_8242877463465214800[2] = 0;
   out_8242877463465214800[3] = 0;
   out_8242877463465214800[4] = 0;
   out_8242877463465214800[5] = 0;
   out_8242877463465214800[6] = 0;
   out_8242877463465214800[7] = 0;
   out_8242877463465214800[8] = 0;
   out_8242877463465214800[9] = 0;
   out_8242877463465214800[10] = 1;
   out_8242877463465214800[11] = 0;
   out_8242877463465214800[12] = 0;
   out_8242877463465214800[13] = 1;
   out_8242877463465214800[14] = 0;
   out_8242877463465214800[15] = 0;
   out_8242877463465214800[16] = 0;
   out_8242877463465214800[17] = 0;
   out_8242877463465214800[18] = 0;
   out_8242877463465214800[19] = 0;
   out_8242877463465214800[20] = 0;
   out_8242877463465214800[21] = 0;
   out_8242877463465214800[22] = 0;
   out_8242877463465214800[23] = 0;
   out_8242877463465214800[24] = 0;
   out_8242877463465214800[25] = 0;
   out_8242877463465214800[26] = 0;
   out_8242877463465214800[27] = 0;
   out_8242877463465214800[28] = 0;
   out_8242877463465214800[29] = 0;
   out_8242877463465214800[30] = 0;
   out_8242877463465214800[31] = 0;
   out_8242877463465214800[32] = 0;
   out_8242877463465214800[33] = 1;
   out_8242877463465214800[34] = 0;
   out_8242877463465214800[35] = 0;
   out_8242877463465214800[36] = 1;
   out_8242877463465214800[37] = 0;
   out_8242877463465214800[38] = 0;
   out_8242877463465214800[39] = 0;
   out_8242877463465214800[40] = 0;
   out_8242877463465214800[41] = 0;
   out_8242877463465214800[42] = 0;
   out_8242877463465214800[43] = 0;
   out_8242877463465214800[44] = 0;
   out_8242877463465214800[45] = 0;
   out_8242877463465214800[46] = 0;
   out_8242877463465214800[47] = 0;
   out_8242877463465214800[48] = 0;
   out_8242877463465214800[49] = 0;
   out_8242877463465214800[50] = 0;
   out_8242877463465214800[51] = 0;
   out_8242877463465214800[52] = 0;
   out_8242877463465214800[53] = 0;
   out_8242877463465214800[54] = 0;
   out_8242877463465214800[55] = 0;
   out_8242877463465214800[56] = 1;
   out_8242877463465214800[57] = 0;
   out_8242877463465214800[58] = 0;
   out_8242877463465214800[59] = 1;
   out_8242877463465214800[60] = 0;
   out_8242877463465214800[61] = 0;
   out_8242877463465214800[62] = 0;
   out_8242877463465214800[63] = 0;
   out_8242877463465214800[64] = 0;
   out_8242877463465214800[65] = 0;
}
void h_9(double *state, double *unused, double *out_7537792390691149338) {
   out_7537792390691149338[0] = state[10];
   out_7537792390691149338[1] = state[11];
   out_7537792390691149338[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4085709727110437317) {
   out_4085709727110437317[0] = 0;
   out_4085709727110437317[1] = 0;
   out_4085709727110437317[2] = 0;
   out_4085709727110437317[3] = 0;
   out_4085709727110437317[4] = 0;
   out_4085709727110437317[5] = 0;
   out_4085709727110437317[6] = 0;
   out_4085709727110437317[7] = 0;
   out_4085709727110437317[8] = 0;
   out_4085709727110437317[9] = 0;
   out_4085709727110437317[10] = 1;
   out_4085709727110437317[11] = 0;
   out_4085709727110437317[12] = 0;
   out_4085709727110437317[13] = 0;
   out_4085709727110437317[14] = 0;
   out_4085709727110437317[15] = 0;
   out_4085709727110437317[16] = 0;
   out_4085709727110437317[17] = 0;
   out_4085709727110437317[18] = 0;
   out_4085709727110437317[19] = 0;
   out_4085709727110437317[20] = 0;
   out_4085709727110437317[21] = 0;
   out_4085709727110437317[22] = 0;
   out_4085709727110437317[23] = 0;
   out_4085709727110437317[24] = 0;
   out_4085709727110437317[25] = 0;
   out_4085709727110437317[26] = 0;
   out_4085709727110437317[27] = 0;
   out_4085709727110437317[28] = 0;
   out_4085709727110437317[29] = 0;
   out_4085709727110437317[30] = 0;
   out_4085709727110437317[31] = 0;
   out_4085709727110437317[32] = 0;
   out_4085709727110437317[33] = 1;
   out_4085709727110437317[34] = 0;
   out_4085709727110437317[35] = 0;
   out_4085709727110437317[36] = 0;
   out_4085709727110437317[37] = 0;
   out_4085709727110437317[38] = 0;
   out_4085709727110437317[39] = 0;
   out_4085709727110437317[40] = 0;
   out_4085709727110437317[41] = 0;
   out_4085709727110437317[42] = 0;
   out_4085709727110437317[43] = 0;
   out_4085709727110437317[44] = 0;
   out_4085709727110437317[45] = 0;
   out_4085709727110437317[46] = 0;
   out_4085709727110437317[47] = 0;
   out_4085709727110437317[48] = 0;
   out_4085709727110437317[49] = 0;
   out_4085709727110437317[50] = 0;
   out_4085709727110437317[51] = 0;
   out_4085709727110437317[52] = 0;
   out_4085709727110437317[53] = 0;
   out_4085709727110437317[54] = 0;
   out_4085709727110437317[55] = 0;
   out_4085709727110437317[56] = 1;
   out_4085709727110437317[57] = 0;
   out_4085709727110437317[58] = 0;
   out_4085709727110437317[59] = 0;
   out_4085709727110437317[60] = 0;
   out_4085709727110437317[61] = 0;
   out_4085709727110437317[62] = 0;
   out_4085709727110437317[63] = 0;
   out_4085709727110437317[64] = 0;
   out_4085709727110437317[65] = 0;
}
void h_10(double *state, double *unused, double *out_2492288544387048668) {
   out_2492288544387048668[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2492288544387048668[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2492288544387048668[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8728770980102530045) {
   out_8728770980102530045[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8728770980102530045[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8728770980102530045[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8728770980102530045[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8728770980102530045[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8728770980102530045[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8728770980102530045[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8728770980102530045[7] = 0;
   out_8728770980102530045[8] = 0;
   out_8728770980102530045[9] = 0;
   out_8728770980102530045[10] = 0;
   out_8728770980102530045[11] = 0;
   out_8728770980102530045[12] = 0;
   out_8728770980102530045[13] = 0;
   out_8728770980102530045[14] = 0;
   out_8728770980102530045[15] = 0;
   out_8728770980102530045[16] = 1;
   out_8728770980102530045[17] = 0;
   out_8728770980102530045[18] = 0;
   out_8728770980102530045[19] = 1;
   out_8728770980102530045[20] = 0;
   out_8728770980102530045[21] = 0;
   out_8728770980102530045[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8728770980102530045[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8728770980102530045[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8728770980102530045[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8728770980102530045[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8728770980102530045[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8728770980102530045[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8728770980102530045[29] = 0;
   out_8728770980102530045[30] = 0;
   out_8728770980102530045[31] = 0;
   out_8728770980102530045[32] = 0;
   out_8728770980102530045[33] = 0;
   out_8728770980102530045[34] = 0;
   out_8728770980102530045[35] = 0;
   out_8728770980102530045[36] = 0;
   out_8728770980102530045[37] = 0;
   out_8728770980102530045[38] = 0;
   out_8728770980102530045[39] = 1;
   out_8728770980102530045[40] = 0;
   out_8728770980102530045[41] = 0;
   out_8728770980102530045[42] = 1;
   out_8728770980102530045[43] = 0;
   out_8728770980102530045[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8728770980102530045[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8728770980102530045[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8728770980102530045[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8728770980102530045[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8728770980102530045[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8728770980102530045[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8728770980102530045[51] = 0;
   out_8728770980102530045[52] = 0;
   out_8728770980102530045[53] = 0;
   out_8728770980102530045[54] = 0;
   out_8728770980102530045[55] = 0;
   out_8728770980102530045[56] = 0;
   out_8728770980102530045[57] = 0;
   out_8728770980102530045[58] = 0;
   out_8728770980102530045[59] = 0;
   out_8728770980102530045[60] = 0;
   out_8728770980102530045[61] = 0;
   out_8728770980102530045[62] = 1;
   out_8728770980102530045[63] = 0;
   out_8728770980102530045[64] = 0;
   out_8728770980102530045[65] = 1;
}
void h_12(double *state, double *unused, double *out_3416092933119690794) {
   out_3416092933119690794[0] = state[0];
   out_3416092933119690794[1] = state[1];
   out_3416092933119690794[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8863976488512808467) {
   out_8863976488512808467[0] = 1;
   out_8863976488512808467[1] = 0;
   out_8863976488512808467[2] = 0;
   out_8863976488512808467[3] = 0;
   out_8863976488512808467[4] = 0;
   out_8863976488512808467[5] = 0;
   out_8863976488512808467[6] = 0;
   out_8863976488512808467[7] = 0;
   out_8863976488512808467[8] = 0;
   out_8863976488512808467[9] = 0;
   out_8863976488512808467[10] = 0;
   out_8863976488512808467[11] = 0;
   out_8863976488512808467[12] = 0;
   out_8863976488512808467[13] = 0;
   out_8863976488512808467[14] = 0;
   out_8863976488512808467[15] = 0;
   out_8863976488512808467[16] = 0;
   out_8863976488512808467[17] = 0;
   out_8863976488512808467[18] = 0;
   out_8863976488512808467[19] = 0;
   out_8863976488512808467[20] = 0;
   out_8863976488512808467[21] = 0;
   out_8863976488512808467[22] = 0;
   out_8863976488512808467[23] = 1;
   out_8863976488512808467[24] = 0;
   out_8863976488512808467[25] = 0;
   out_8863976488512808467[26] = 0;
   out_8863976488512808467[27] = 0;
   out_8863976488512808467[28] = 0;
   out_8863976488512808467[29] = 0;
   out_8863976488512808467[30] = 0;
   out_8863976488512808467[31] = 0;
   out_8863976488512808467[32] = 0;
   out_8863976488512808467[33] = 0;
   out_8863976488512808467[34] = 0;
   out_8863976488512808467[35] = 0;
   out_8863976488512808467[36] = 0;
   out_8863976488512808467[37] = 0;
   out_8863976488512808467[38] = 0;
   out_8863976488512808467[39] = 0;
   out_8863976488512808467[40] = 0;
   out_8863976488512808467[41] = 0;
   out_8863976488512808467[42] = 0;
   out_8863976488512808467[43] = 0;
   out_8863976488512808467[44] = 0;
   out_8863976488512808467[45] = 0;
   out_8863976488512808467[46] = 1;
   out_8863976488512808467[47] = 0;
   out_8863976488512808467[48] = 0;
   out_8863976488512808467[49] = 0;
   out_8863976488512808467[50] = 0;
   out_8863976488512808467[51] = 0;
   out_8863976488512808467[52] = 0;
   out_8863976488512808467[53] = 0;
   out_8863976488512808467[54] = 0;
   out_8863976488512808467[55] = 0;
   out_8863976488512808467[56] = 0;
   out_8863976488512808467[57] = 0;
   out_8863976488512808467[58] = 0;
   out_8863976488512808467[59] = 0;
   out_8863976488512808467[60] = 0;
   out_8863976488512808467[61] = 0;
   out_8863976488512808467[62] = 0;
   out_8863976488512808467[63] = 0;
   out_8863976488512808467[64] = 0;
   out_8863976488512808467[65] = 0;
}
void h_35(double *state, double *unused, double *out_3897801298940732081) {
   out_3897801298940732081[0] = state[7];
   out_3897801298940732081[1] = state[8];
   out_3897801298940732081[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6837204552871729440) {
   out_6837204552871729440[0] = 0;
   out_6837204552871729440[1] = 0;
   out_6837204552871729440[2] = 0;
   out_6837204552871729440[3] = 0;
   out_6837204552871729440[4] = 0;
   out_6837204552871729440[5] = 0;
   out_6837204552871729440[6] = 0;
   out_6837204552871729440[7] = 1;
   out_6837204552871729440[8] = 0;
   out_6837204552871729440[9] = 0;
   out_6837204552871729440[10] = 0;
   out_6837204552871729440[11] = 0;
   out_6837204552871729440[12] = 0;
   out_6837204552871729440[13] = 0;
   out_6837204552871729440[14] = 0;
   out_6837204552871729440[15] = 0;
   out_6837204552871729440[16] = 0;
   out_6837204552871729440[17] = 0;
   out_6837204552871729440[18] = 0;
   out_6837204552871729440[19] = 0;
   out_6837204552871729440[20] = 0;
   out_6837204552871729440[21] = 0;
   out_6837204552871729440[22] = 0;
   out_6837204552871729440[23] = 0;
   out_6837204552871729440[24] = 0;
   out_6837204552871729440[25] = 0;
   out_6837204552871729440[26] = 0;
   out_6837204552871729440[27] = 0;
   out_6837204552871729440[28] = 0;
   out_6837204552871729440[29] = 0;
   out_6837204552871729440[30] = 1;
   out_6837204552871729440[31] = 0;
   out_6837204552871729440[32] = 0;
   out_6837204552871729440[33] = 0;
   out_6837204552871729440[34] = 0;
   out_6837204552871729440[35] = 0;
   out_6837204552871729440[36] = 0;
   out_6837204552871729440[37] = 0;
   out_6837204552871729440[38] = 0;
   out_6837204552871729440[39] = 0;
   out_6837204552871729440[40] = 0;
   out_6837204552871729440[41] = 0;
   out_6837204552871729440[42] = 0;
   out_6837204552871729440[43] = 0;
   out_6837204552871729440[44] = 0;
   out_6837204552871729440[45] = 0;
   out_6837204552871729440[46] = 0;
   out_6837204552871729440[47] = 0;
   out_6837204552871729440[48] = 0;
   out_6837204552871729440[49] = 0;
   out_6837204552871729440[50] = 0;
   out_6837204552871729440[51] = 0;
   out_6837204552871729440[52] = 0;
   out_6837204552871729440[53] = 1;
   out_6837204552871729440[54] = 0;
   out_6837204552871729440[55] = 0;
   out_6837204552871729440[56] = 0;
   out_6837204552871729440[57] = 0;
   out_6837204552871729440[58] = 0;
   out_6837204552871729440[59] = 0;
   out_6837204552871729440[60] = 0;
   out_6837204552871729440[61] = 0;
   out_6837204552871729440[62] = 0;
   out_6837204552871729440[63] = 0;
   out_6837204552871729440[64] = 0;
   out_6837204552871729440[65] = 0;
}
void h_32(double *state, double *unused, double *out_4297874594603971057) {
   out_4297874594603971057[0] = state[3];
   out_4297874594603971057[1] = state[4];
   out_4297874594603971057[2] = state[5];
   out_4297874594603971057[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1035900180664116882) {
   out_1035900180664116882[0] = 0;
   out_1035900180664116882[1] = 0;
   out_1035900180664116882[2] = 0;
   out_1035900180664116882[3] = 1;
   out_1035900180664116882[4] = 0;
   out_1035900180664116882[5] = 0;
   out_1035900180664116882[6] = 0;
   out_1035900180664116882[7] = 0;
   out_1035900180664116882[8] = 0;
   out_1035900180664116882[9] = 0;
   out_1035900180664116882[10] = 0;
   out_1035900180664116882[11] = 0;
   out_1035900180664116882[12] = 0;
   out_1035900180664116882[13] = 0;
   out_1035900180664116882[14] = 0;
   out_1035900180664116882[15] = 0;
   out_1035900180664116882[16] = 0;
   out_1035900180664116882[17] = 0;
   out_1035900180664116882[18] = 0;
   out_1035900180664116882[19] = 0;
   out_1035900180664116882[20] = 0;
   out_1035900180664116882[21] = 0;
   out_1035900180664116882[22] = 0;
   out_1035900180664116882[23] = 0;
   out_1035900180664116882[24] = 0;
   out_1035900180664116882[25] = 0;
   out_1035900180664116882[26] = 1;
   out_1035900180664116882[27] = 0;
   out_1035900180664116882[28] = 0;
   out_1035900180664116882[29] = 0;
   out_1035900180664116882[30] = 0;
   out_1035900180664116882[31] = 0;
   out_1035900180664116882[32] = 0;
   out_1035900180664116882[33] = 0;
   out_1035900180664116882[34] = 0;
   out_1035900180664116882[35] = 0;
   out_1035900180664116882[36] = 0;
   out_1035900180664116882[37] = 0;
   out_1035900180664116882[38] = 0;
   out_1035900180664116882[39] = 0;
   out_1035900180664116882[40] = 0;
   out_1035900180664116882[41] = 0;
   out_1035900180664116882[42] = 0;
   out_1035900180664116882[43] = 0;
   out_1035900180664116882[44] = 0;
   out_1035900180664116882[45] = 0;
   out_1035900180664116882[46] = 0;
   out_1035900180664116882[47] = 0;
   out_1035900180664116882[48] = 0;
   out_1035900180664116882[49] = 1;
   out_1035900180664116882[50] = 0;
   out_1035900180664116882[51] = 0;
   out_1035900180664116882[52] = 0;
   out_1035900180664116882[53] = 0;
   out_1035900180664116882[54] = 0;
   out_1035900180664116882[55] = 0;
   out_1035900180664116882[56] = 0;
   out_1035900180664116882[57] = 0;
   out_1035900180664116882[58] = 0;
   out_1035900180664116882[59] = 0;
   out_1035900180664116882[60] = 0;
   out_1035900180664116882[61] = 0;
   out_1035900180664116882[62] = 0;
   out_1035900180664116882[63] = 0;
   out_1035900180664116882[64] = 0;
   out_1035900180664116882[65] = 0;
   out_1035900180664116882[66] = 0;
   out_1035900180664116882[67] = 0;
   out_1035900180664116882[68] = 0;
   out_1035900180664116882[69] = 0;
   out_1035900180664116882[70] = 0;
   out_1035900180664116882[71] = 0;
   out_1035900180664116882[72] = 1;
   out_1035900180664116882[73] = 0;
   out_1035900180664116882[74] = 0;
   out_1035900180664116882[75] = 0;
   out_1035900180664116882[76] = 0;
   out_1035900180664116882[77] = 0;
   out_1035900180664116882[78] = 0;
   out_1035900180664116882[79] = 0;
   out_1035900180664116882[80] = 0;
   out_1035900180664116882[81] = 0;
   out_1035900180664116882[82] = 0;
   out_1035900180664116882[83] = 0;
   out_1035900180664116882[84] = 0;
   out_1035900180664116882[85] = 0;
   out_1035900180664116882[86] = 0;
   out_1035900180664116882[87] = 0;
}
void h_13(double *state, double *unused, double *out_440301787937693022) {
   out_440301787937693022[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_440301787937693022[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_440301787937693022[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6891277052059464278) {
   out_6891277052059464278[0] = 0;
   out_6891277052059464278[1] = 0;
   out_6891277052059464278[2] = 0;
   out_6891277052059464278[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6891277052059464278[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6891277052059464278[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6891277052059464278[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6891277052059464278[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6891277052059464278[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6891277052059464278[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6891277052059464278[10] = 0;
   out_6891277052059464278[11] = 0;
   out_6891277052059464278[12] = 0;
   out_6891277052059464278[13] = 0;
   out_6891277052059464278[14] = 0;
   out_6891277052059464278[15] = 0;
   out_6891277052059464278[16] = 0;
   out_6891277052059464278[17] = 0;
   out_6891277052059464278[18] = 0;
   out_6891277052059464278[19] = 0;
   out_6891277052059464278[20] = 0;
   out_6891277052059464278[21] = 0;
   out_6891277052059464278[22] = 0;
   out_6891277052059464278[23] = 0;
   out_6891277052059464278[24] = 0;
   out_6891277052059464278[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6891277052059464278[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6891277052059464278[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6891277052059464278[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6891277052059464278[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6891277052059464278[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6891277052059464278[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6891277052059464278[32] = 0;
   out_6891277052059464278[33] = 0;
   out_6891277052059464278[34] = 0;
   out_6891277052059464278[35] = 0;
   out_6891277052059464278[36] = 0;
   out_6891277052059464278[37] = 0;
   out_6891277052059464278[38] = 0;
   out_6891277052059464278[39] = 0;
   out_6891277052059464278[40] = 0;
   out_6891277052059464278[41] = 0;
   out_6891277052059464278[42] = 0;
   out_6891277052059464278[43] = 0;
   out_6891277052059464278[44] = 0;
   out_6891277052059464278[45] = 0;
   out_6891277052059464278[46] = 0;
   out_6891277052059464278[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6891277052059464278[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6891277052059464278[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6891277052059464278[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6891277052059464278[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6891277052059464278[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6891277052059464278[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6891277052059464278[54] = 0;
   out_6891277052059464278[55] = 0;
   out_6891277052059464278[56] = 0;
   out_6891277052059464278[57] = 0;
   out_6891277052059464278[58] = 0;
   out_6891277052059464278[59] = 0;
   out_6891277052059464278[60] = 0;
   out_6891277052059464278[61] = 0;
   out_6891277052059464278[62] = 0;
   out_6891277052059464278[63] = 0;
   out_6891277052059464278[64] = 0;
   out_6891277052059464278[65] = 0;
}
void h_14(double *state, double *unused, double *out_7537792390691149338) {
   out_7537792390691149338[0] = state[10];
   out_7537792390691149338[1] = state[11];
   out_7537792390691149338[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4085709727110437317) {
   out_4085709727110437317[0] = 0;
   out_4085709727110437317[1] = 0;
   out_4085709727110437317[2] = 0;
   out_4085709727110437317[3] = 0;
   out_4085709727110437317[4] = 0;
   out_4085709727110437317[5] = 0;
   out_4085709727110437317[6] = 0;
   out_4085709727110437317[7] = 0;
   out_4085709727110437317[8] = 0;
   out_4085709727110437317[9] = 0;
   out_4085709727110437317[10] = 1;
   out_4085709727110437317[11] = 0;
   out_4085709727110437317[12] = 0;
   out_4085709727110437317[13] = 0;
   out_4085709727110437317[14] = 0;
   out_4085709727110437317[15] = 0;
   out_4085709727110437317[16] = 0;
   out_4085709727110437317[17] = 0;
   out_4085709727110437317[18] = 0;
   out_4085709727110437317[19] = 0;
   out_4085709727110437317[20] = 0;
   out_4085709727110437317[21] = 0;
   out_4085709727110437317[22] = 0;
   out_4085709727110437317[23] = 0;
   out_4085709727110437317[24] = 0;
   out_4085709727110437317[25] = 0;
   out_4085709727110437317[26] = 0;
   out_4085709727110437317[27] = 0;
   out_4085709727110437317[28] = 0;
   out_4085709727110437317[29] = 0;
   out_4085709727110437317[30] = 0;
   out_4085709727110437317[31] = 0;
   out_4085709727110437317[32] = 0;
   out_4085709727110437317[33] = 1;
   out_4085709727110437317[34] = 0;
   out_4085709727110437317[35] = 0;
   out_4085709727110437317[36] = 0;
   out_4085709727110437317[37] = 0;
   out_4085709727110437317[38] = 0;
   out_4085709727110437317[39] = 0;
   out_4085709727110437317[40] = 0;
   out_4085709727110437317[41] = 0;
   out_4085709727110437317[42] = 0;
   out_4085709727110437317[43] = 0;
   out_4085709727110437317[44] = 0;
   out_4085709727110437317[45] = 0;
   out_4085709727110437317[46] = 0;
   out_4085709727110437317[47] = 0;
   out_4085709727110437317[48] = 0;
   out_4085709727110437317[49] = 0;
   out_4085709727110437317[50] = 0;
   out_4085709727110437317[51] = 0;
   out_4085709727110437317[52] = 0;
   out_4085709727110437317[53] = 0;
   out_4085709727110437317[54] = 0;
   out_4085709727110437317[55] = 0;
   out_4085709727110437317[56] = 1;
   out_4085709727110437317[57] = 0;
   out_4085709727110437317[58] = 0;
   out_4085709727110437317[59] = 0;
   out_4085709727110437317[60] = 0;
   out_4085709727110437317[61] = 0;
   out_4085709727110437317[62] = 0;
   out_4085709727110437317[63] = 0;
   out_4085709727110437317[64] = 0;
   out_4085709727110437317[65] = 0;
}
void h_33(double *state, double *unused, double *out_5120077427427814513) {
   out_5120077427427814513[0] = state[16];
   out_5120077427427814513[1] = state[17];
   out_5120077427427814513[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3686647548232871836) {
   out_3686647548232871836[0] = 0;
   out_3686647548232871836[1] = 0;
   out_3686647548232871836[2] = 0;
   out_3686647548232871836[3] = 0;
   out_3686647548232871836[4] = 0;
   out_3686647548232871836[5] = 0;
   out_3686647548232871836[6] = 0;
   out_3686647548232871836[7] = 0;
   out_3686647548232871836[8] = 0;
   out_3686647548232871836[9] = 0;
   out_3686647548232871836[10] = 0;
   out_3686647548232871836[11] = 0;
   out_3686647548232871836[12] = 0;
   out_3686647548232871836[13] = 0;
   out_3686647548232871836[14] = 0;
   out_3686647548232871836[15] = 0;
   out_3686647548232871836[16] = 1;
   out_3686647548232871836[17] = 0;
   out_3686647548232871836[18] = 0;
   out_3686647548232871836[19] = 0;
   out_3686647548232871836[20] = 0;
   out_3686647548232871836[21] = 0;
   out_3686647548232871836[22] = 0;
   out_3686647548232871836[23] = 0;
   out_3686647548232871836[24] = 0;
   out_3686647548232871836[25] = 0;
   out_3686647548232871836[26] = 0;
   out_3686647548232871836[27] = 0;
   out_3686647548232871836[28] = 0;
   out_3686647548232871836[29] = 0;
   out_3686647548232871836[30] = 0;
   out_3686647548232871836[31] = 0;
   out_3686647548232871836[32] = 0;
   out_3686647548232871836[33] = 0;
   out_3686647548232871836[34] = 0;
   out_3686647548232871836[35] = 0;
   out_3686647548232871836[36] = 0;
   out_3686647548232871836[37] = 0;
   out_3686647548232871836[38] = 0;
   out_3686647548232871836[39] = 1;
   out_3686647548232871836[40] = 0;
   out_3686647548232871836[41] = 0;
   out_3686647548232871836[42] = 0;
   out_3686647548232871836[43] = 0;
   out_3686647548232871836[44] = 0;
   out_3686647548232871836[45] = 0;
   out_3686647548232871836[46] = 0;
   out_3686647548232871836[47] = 0;
   out_3686647548232871836[48] = 0;
   out_3686647548232871836[49] = 0;
   out_3686647548232871836[50] = 0;
   out_3686647548232871836[51] = 0;
   out_3686647548232871836[52] = 0;
   out_3686647548232871836[53] = 0;
   out_3686647548232871836[54] = 0;
   out_3686647548232871836[55] = 0;
   out_3686647548232871836[56] = 0;
   out_3686647548232871836[57] = 0;
   out_3686647548232871836[58] = 0;
   out_3686647548232871836[59] = 0;
   out_3686647548232871836[60] = 0;
   out_3686647548232871836[61] = 0;
   out_3686647548232871836[62] = 1;
   out_3686647548232871836[63] = 0;
   out_3686647548232871836[64] = 0;
   out_3686647548232871836[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2001638209905338966) {
  H(in_vec, out_2001638209905338966);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4090277704939598758) {
  err_fun(nom_x, delta_x, out_4090277704939598758);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5202557587600642285) {
  inv_err_fun(nom_x, true_x, out_5202557587600642285);
}
void live_H_mod_fun(double *state, double *out_7949871151437297473) {
  H_mod_fun(state, out_7949871151437297473);
}
void live_f_fun(double *state, double dt, double *out_3703409087435433243) {
  f_fun(state,  dt, out_3703409087435433243);
}
void live_F_fun(double *state, double dt, double *out_4085847992067201093) {
  F_fun(state,  dt, out_4085847992067201093);
}
void live_h_4(double *state, double *unused, double *out_6781006617317371273) {
  h_4(state, unused, out_6781006617317371273);
}
void live_H_4(double *state, double *unused, double *out_8242877463465214800) {
  H_4(state, unused, out_8242877463465214800);
}
void live_h_9(double *state, double *unused, double *out_7537792390691149338) {
  h_9(state, unused, out_7537792390691149338);
}
void live_H_9(double *state, double *unused, double *out_4085709727110437317) {
  H_9(state, unused, out_4085709727110437317);
}
void live_h_10(double *state, double *unused, double *out_2492288544387048668) {
  h_10(state, unused, out_2492288544387048668);
}
void live_H_10(double *state, double *unused, double *out_8728770980102530045) {
  H_10(state, unused, out_8728770980102530045);
}
void live_h_12(double *state, double *unused, double *out_3416092933119690794) {
  h_12(state, unused, out_3416092933119690794);
}
void live_H_12(double *state, double *unused, double *out_8863976488512808467) {
  H_12(state, unused, out_8863976488512808467);
}
void live_h_35(double *state, double *unused, double *out_3897801298940732081) {
  h_35(state, unused, out_3897801298940732081);
}
void live_H_35(double *state, double *unused, double *out_6837204552871729440) {
  H_35(state, unused, out_6837204552871729440);
}
void live_h_32(double *state, double *unused, double *out_4297874594603971057) {
  h_32(state, unused, out_4297874594603971057);
}
void live_H_32(double *state, double *unused, double *out_1035900180664116882) {
  H_32(state, unused, out_1035900180664116882);
}
void live_h_13(double *state, double *unused, double *out_440301787937693022) {
  h_13(state, unused, out_440301787937693022);
}
void live_H_13(double *state, double *unused, double *out_6891277052059464278) {
  H_13(state, unused, out_6891277052059464278);
}
void live_h_14(double *state, double *unused, double *out_7537792390691149338) {
  h_14(state, unused, out_7537792390691149338);
}
void live_H_14(double *state, double *unused, double *out_4085709727110437317) {
  H_14(state, unused, out_4085709727110437317);
}
void live_h_33(double *state, double *unused, double *out_5120077427427814513) {
  h_33(state, unused, out_5120077427427814513);
}
void live_H_33(double *state, double *unused, double *out_3686647548232871836) {
  H_33(state, unused, out_3686647548232871836);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
